/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id("com.google.looker.java-application-conventions")
}

dependencies {
    implementation("org.apache.commons:commons-text")
    implementation(project(":utilities"))
}

//application {
//    // Define the main class for the application.
//    mainClass.set("com.google.looker.app.App")
//}
val appName = "hello"
val charPool : List<Char> = ('a'..'z') + ('0'..'9')
var stringLength=10

val randomString = (1..stringLength)
    .map { kotlin.random.Random.nextInt(0, charPool.size) }
    .map(charPool::get)
    .joinToString("")

var dataflowBaseArgs = mutableListOf(
    "--appName=$appName",
    "--region=us-east1",
    "--maxNumWorkers=1",
    "--workerMachineType=n1-standard-1",
    "--runner=DataflowRunner"
)
var jobArgs = mutableListOf(
    "--project=opsbae-jd",
    "--tempLocation=gs://opsbae-jd-temp/dataflow",
    "--jobName=$appName-$randomString"
)

var dataflowArgs = jobArgs.toMutableList()
dataflowArgs.addAll(dataflowBaseArgs)

task("local", JavaExec::class){
    group = "application"
    mainClass.set("com.google.looker.app.App")
    classpath = sourceSets["main"].runtimeClasspath
}
task("dataflow", JavaExec::class){
    group = "application"
    mainClass.set("com.google.looker.app.App")
    classpath = sourceSets["main"].runtimeClasspath
    args = dataflowArgs
}
